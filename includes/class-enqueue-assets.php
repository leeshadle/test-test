<?php
/**
 * Enqueue script and style assets.
 *
 * @package TestTest
 */

namespace TestTest;

/**
 * Enqueue script and style assets.
 *
 * @since 1.0.0
 */
class Enqueue_Assets {

	/**
	 * The plugin instance.
	 *
	 * @var array
	 */
	private $plugin_instance;

	/**
	 * Register class with appropriate WordPress hooks
	 */
	public static function register() {
		$instance = new self();
		add_action( 'init', array( $instance, 'enqueue_styles' ) );
		add_action( 'wp_enqueue_scripts', array( $instance, 'enqueue_frontend_scripts' ) );
	}

	/**
	 * Construct the class.
	 *
	 * @since 1.0.0
	 * @return void
	 */
	public function __construct() {
		$this->plugin_instance = Plugin::get_instance();
	}

	/**
	 * Enqueue styles.
	 *
	 * @return void
	 */
	public function enqueue_styles() {

		// Shortcuts for variables.
		$plugin_instance = $this->plugin_instance;
		$slug            = $plugin_instance->slug;
		$plugin_dir_url  = $plugin_instance->plugin_dir_url;
		$version         = $plugin_instance->version;

		// Enqueue tailwind styles.
		wp_enqueue_style(
			$slug . '-tailwind',
			$plugin_dir_url . 'build/tailwind.css',
			array(),
			$version
		);
	}

	/**
	 * Registers all frontend scripts so we can use react on the frontend.
	 *
	 * @return void
	 */
	public function enqueue_frontend_scripts() {
		// Shortcuts for variables.
		$plugin_instance = $this->plugin_instance;
		$slug            = $plugin_instance->slug;
		$plugin_dir_path = $plugin_instance->plugin_dir_path;
		$plugin_dir_url  = $plugin_instance->plugin_dir_url;

		// Register frontend scripts.
		// Dynamically load dependencies using front.asset.php generated by
		// @wordpress/dependency-extraction-webpack-plugin.
		$script_asset = require "$plugin_dir_path/build/frontend.asset.php";

		wp_enqueue_script(
			$slug . '-frontend',
			$plugin_dir_url . 'build/frontend.js',
			$script_asset['dependencies'],
			$script_asset['version'],
			true
		);
	}
}
